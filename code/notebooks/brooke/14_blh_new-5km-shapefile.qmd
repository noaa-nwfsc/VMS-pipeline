---
title: "14_blh_new-5km-shapefile"
format: 
  html:
    embed-resources: true
editor: visual
---

I ran the monthly maps code and noticed a couple differences, all are reasonable:

-   Grid cells are trimmed to the coastline. Great, much prettier maps.

-   New BC subdirectory. Makes sense for a couple grid cells at the northern end of Washington, and will go away once I filter out the Puget Sound.

-   A couple of grid cells moved from northern end of OR map to southern end of WA map. Seems fine, not a huge impact on the output, and the data doesn't seem to be lost, just moved along the border.

Not related to the change in shape files, but related to the map visualizations - We still need to decide if it makes more sense to facet based on fishing effort (where the VMS ping is, how it's done now) vs. landings (where the ticket is landed, how it could be done). I think the answer should probably be similar to our decision to visualize by whale season, what makes the most sense from a management perspective? What regulations are the fishers held to, is it based on area fished or area landed?

I want to get a sense of the unique values and combinations of values for the new features, compared to the old features.

I'm going to load the two versions and compare.

```{r, include=FALSE}
library(here)
library(tidyverse)
library(sf)
library(rnaturalearth)
```

```{r}
grid_5km_v1 <- read_sf(here('spatial_data', 'master_5km_grid_tmer.shp'))
grid_5km_v2 <- read_sf(here('spatial_data', 'fivekm_grid_polys_shore_lamb.shp'))
```

What dimensions?

```{r}
dim(grid_5km_v1)
dim(grid_5km_v2)
```

How many unique grid cells are there?

```{r}
n_distinct(grid_5km_v1$GRID5KM_ID)
n_distinct(grid_5km_v2$GRID5KM_ID)
```

There are more grid cells in the older version, which makes me wonder if the extent is slightly broader. There are 31 more columns in the newer version, which makes sense because Blake made this to include more features I asked for.

What features do they each have?

```{r}
colnames(grid_5km_v1)
colnames(grid_5km_v2)
```

```{r}
# what is the same?
intersect(colnames(grid_5km_v1), colnames(grid_5km_v2))

# what is unique to V1?
setdiff(colnames(grid_5km_v1), colnames(grid_5km_v2))

# what is unique to V2?
setdiff(colnames(grid_5km_v2), colnames(grid_5km_v1))
```

The newer version has more information about:

-   Area. The new version includes the area assuming the grid cell is 5km x 5km, and the actual area trimmed to exclude the coastline.

-   Shoreline. Binary for whether a grid cell intersects the shoreline.

-   Depth. The older version only had the weighted mean depth of the grid cell, the new version also includes the median, standard deviation, variance, minimum and maximum.

-   Water zone. Does the grid cell fall within \<3, 3-200, \>200 nautical miles from shoreline.

-   Salish sea. Does the grid cell fall within the Puget Sound or not.

-   Management areas. CDFW RAMP areas and zones for California, Derville zones for Oregon, and Marine Fish and Shellfish Manage Catch Reporting areas for Washington.

-   Corner coordinates. Since I want to be able to join this map to Chris Free's dataframe which has latitude over time, Blake added the upper and lower left and right corner locations of each grid cell.

This is all based on the metadata file that Blake created, which is super helpful, since that detail is not knowable from column names alone.

What geometry type?

```{r}
class(grid_5km_v1$geometry)
class(grid_5km_v2$geometry)
```

Version 1 is polygons. Version 2 is multipolygons, because it trims the grid cells to the coast, and the shore can sometimes split a grid cell into multiple polygons.

What coordinate system?

```{r}
st_crs(grid_5km_v1)
st_crs(grid_5km_v2)
```

What extent?

```{r}
st_bbox(grid_5km_v1)
st_bbox(grid_5km_v2)
```

Well, they're different, but that's otherwise meaningless to me.

What's it look like on a map?

```{r}
background_map <- ne_states(country = 'United States of America')
bbox_v1 <- st_bbox(grid_5km_v1)
bbox_v2 <- st_bbox(grid_5km_v2)

ggplot() +
  geom_sf(data = grid_5km_v1, aes(fill = STATE), lwd = 0) + 
  geom_sf(data = background_map) +
  xlim(bbox_v1[1], bbox_v1[3]) +
  ylim(bbox_v1[2], bbox_v1[4])

ggplot() +
  geom_sf(data = grid_5km_v2, aes(fill = STATE), lwd = 0) + 
  geom_sf(data = background_map) +
  xlim(bbox_v2[1], bbox_v2[3]) +
  ylim(bbox_v2[2], bbox_v2[4])
```

What are the unique values for the new management zone variables?

```{r}
unique(grid_5km_v2$RAMP_area)
unique(grid_5km_v2$RAMP_zone)
unique(grid_5km_v2$WDFW_WSMA)
unique(grid_5km_v2$Derville)
```

What do the EEZ & management zones look like on a map?

```{r}
plot_grid <- function(grid, fill_var, background) {
  bbox <- st_bbox(grid)
  ggplot() +
    geom_sf(data = grid, aes(fill = get(fill_var)), lwd = 0) + 
    geom_sf(data = background) +
    xlim(bbox[1], bbox[3]) +
    ylim(bbox[2], bbox[4]) +
    labs(fill = fill_var)
}

plot_grid(grid = grid_5km_v2, fill_var = "EEZ", background = background_map)
plot_grid(grid = grid_5km_v2, fill_var = "RAMP_area", background = background_map)
plot_grid(grid = grid_5km_v2, fill_var = "RAMP_zone", background = background_map)
plot_grid(grid = grid_5km_v2, fill_var = "Derville", background = background_map)
plot_grid(grid = grid_5km_v2, fill_var = "WDFW_WSMA", background = background_map)
```

How many cells intersect the shoreline?

```{r}
sum(grid_5km_v2$Shoreline)
```

How many cells in the Salish sea?

```{r}
sum(grid_5km_v2$Salish_Sea)
```

Are all the grid cells from the newer version, or are any lost?

```{r}
length(setdiff(grid_5km_v2$GRID5KM_ID, grid_5km_v1$GRID5KM_ID))
length(setdiff(grid_5km_v1$GRID5KM_ID, grid_5km_v2$GRID5KM_ID))
```

All of them are from the older version.

Where are the old grid cells?

```{r}
old_grid_cell_ids <- setdiff(grid_5km_v1$GRID5KM_ID, grid_5km_v2$GRID5KM_ID)
old_grid_5km_v2 <- grid_5km_v1 %>% 
  mutate(is_old = GRID5KM_ID %in% old_grid_cell_ids) %>%
  filter(is_old)
old_bbox <- st_bbox(old_grid_5km_v2)

ggplot() +
  geom_sf(data = old_grid_5km_v2, color = 'orange') + 
  geom_sf(data = background_map) +
  xlim(old_bbox[1], old_bbox[3]) +
  ylim(old_bbox[2], old_bbox[4])
```

Seems like they're all around the edges, which I won't be using for these maps anyways, so no problems there.

I'm going to play around with some of the map aesthetics. How to rotate California coastline?

```{r}
# non-rotated version
ca_grid <- grid_5km_v2 %>% filter(STATE == "CA")
plot_grid(ca_grid, "STATE", background_map)
plot(ca_grid, max.plot = 1)

# rotated version 1
# from https://r-spatial.github.io/sf/articles/sf3.html#affine-transformations
rot <- function(a) matrix(c(cos(a), sin(a), -sin(a), cos(a)), 2, 2)
ca_grid_rotated <- ca_grid
ca_grid_rotated$geometry <- ca_grid$geometry * rot(pi * 20/180)
plot(ca_grid_rotated, max.plot = 1)
# issue: there's no CRS when it's rotated this way, so geom_sf throws an error
```

I'm going to add the new 30 and 40 fathom lines.

```{r}
# load both versions
fathoms_poly <- read_sf(here('spatial_data', 'fathom_30to40_polygon_lamb.shp'))
bbox_poly <- st_bbox(fathoms_poly)
fathoms_line <- read_sf(here('spatial_data', 'fathom_30to40_lines_lamb.shp'))
bbox_line <- st_bbox(fathoms_line)

# start with one state
or_grid <- grid_5km_v2 %>%
  filter(EEZ == "USA") %>%
  filter(STATE == "OR")
or_bbox <- st_bbox(or_grid)

# plot the lines version
ggplot() +
  geom_sf(data = or_grid) +
  geom_sf(data = fathoms_line, lwd = 0.1) +
  geom_sf(data = background_map) +
  xlim(bbox_line[1], or_bbox[3]) +
  ylim(or_bbox[2], or_bbox[4])

# plot the polygons version
ggplot() +
  geom_sf(data = or_grid) +
  geom_sf(data = fathoms_poly, lwd = 0.1, fill = 'gray10') +
  geom_sf(data = background_map) +
  xlim(bbox_poly[1], or_bbox[3]) +
  ylim(or_bbox[2], or_bbox[4])
```

I lean towards using the lines rather than the polygons version.
